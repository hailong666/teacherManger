import{Y as s,Z as r,y as n}from"./main-2e31a8b5.js";const a=s.create({baseURL:"/api",timeout:1e4});a.interceptors.request.use(e=>{const t=localStorage.getItem("teacher-manager-token");return t&&(e.headers.Authorization=`Bearer ${t}`),e.headers["Cache-Control"]="no-cache, no-store, must-revalidate",e.headers.Pragma="no-cache",e.headers.Expires="0",e},e=>(console.error("请求错误:",e),Promise.reject(e)));a.interceptors.response.use(e=>e.data,e=>{console.error("响应错误:",e);let t="网络错误，请稍后重试";if(e.response)switch(e.response.status){case 401:t="未授权，请重新登录",localStorage.removeItem("teacher-manager-token"),r.push("/login");break;case 403:t="拒绝访问";break;case 404:t="请求的资源不存在";break;case 500:t="服务器内部错误";break;default:t=`请求失败: ${e.response.status}`}else e.request&&(t="服务器未响应");return n({message:t,type:"error",duration:5*1e3}),Promise.reject(e)});const c=e=>a({url:"/api/attendance/qrcode",method:"post",data:{classId:e}}),u=e=>a({url:"/api/attendance/list",method:"get",params:e}),d=(e,t)=>a({url:`/api/attendance/${e}`,method:"put",data:t}),i=e=>a({url:"/api/attendance/stats",method:"get",params:e}),p=e=>a({url:"/api/attendance/scan",method:"post",data:e});export{c as a,i as b,u as g,p as s,d as u};
